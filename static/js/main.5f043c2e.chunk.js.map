{"version":3,"sources":["components/taskForm.js","components/control.js","components/tableItem.js","components/table.js","App.js","serviceWorker.js","index.js"],"names":["TaskForm","props","onCloseFormChild","onCloseForm","onChange","event","target","name","value","setState","onClear","status","onSubmit","preventDefault","state","id","this","taskEditing","prevProps","className","type","onClick","htmlFor","Component","Control","sortBy","sortValue","sort","by","onSort","inputKeyword","search","onSearch","keyword","placeholder","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","TableItem","changeStatus","onUpdateStatus","task","Delete","onDelete","onUpdate","index","key","TableBox","filter","onFilter","filterName","filterStatus","tasks","elmTasks","map","required","App","isDisplayForm","onCreateForm","data","generateID","push","findIndex","localStorage","setItem","JSON","stringify","splice","openForm","parseInt","toLowerCase","console","log","result","forEach","getItem","parse","Math","floor","random","toString","substring","randomElement","indexOf","a","b","elmTaskFrom","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f043c2e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass TaskForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id : '',\r\n            name:'',\r\n            status: false\r\n        };\r\n    }\r\n    componentDidMount(props){\r\n        if(this.props.taskEditing !== null){\r\n            this.setState({\r\n                id : this.props.taskEditing.id,\r\n                name : this.props.taskEditing.name,\r\n                status : this.props.taskEditing.status\r\n            });\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.taskEditing !== this.props.taskEditing && this.props.taskEditing !== null){\r\n            this.setState({\r\n                id : this.props.taskEditing.id,\r\n                name : this.props.taskEditing.name,\r\n                status : this.props.taskEditing.status\r\n            });\r\n        }else if (prevProps.taskEditing !== this.props.taskEditing && this.props.taskEditing === null) {\r\n            this.setState({\r\n                id : '',\r\n                name:'',\r\n                status: false});\r\n        }\r\n    }\r\n    onCloseFormChild = () =>{\r\n        this.props.onCloseForm()\r\n        }\r\n\r\n    onChange = (event)=>{\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value\r\n        if(name === \"status\"){\r\n            value =  target.value === \"true\" ? true: false;\r\n        }     \r\n        this.setState ({\r\n            [name]: value\r\n        });\r\n    }\r\n    onClear = ()=>{\r\n        this.setState({\r\n            name: \"\",\r\n            status: false\r\n        });\r\n    }\r\n    onSubmit = (event)=>{\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.onClear();\r\n        this.onCloseFormChild();\r\n    }\r\n    render(){\r\n        var {id} =this.state;\r\n\r\n\treturn(\r\n              <div>  \r\n                <div className=\"panel panel-warning alert alert-primary\"> \r\n                  <div className=\"panel-heading\">             \r\n                    <h3 className=\"panel-title <text-center></text-center>\">\r\n                        {id !=='' ? \"Cập nhật công việc\":\"Thêm công việc\"}\r\n                        <button type=\"button\" className=\"close\" onClick={this.onCloseFormChild}>\r\n                            <span>&times;</span>\r\n                        </button>\r\n                    </h3>\r\n                  </div>\r\n                </div>    \r\n                <form className=\"padding10\" onSubmit={this.onSubmit}>      \r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Tên:</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={this.state.name} onChange={this.onChange} />\r\n                        <label htmlFor=\"\">Trạng thái:</label>\r\n                        <select name=\"status\" id=\"\" className=\"form-control\" value={this.state.status} onChange={this.onChange}>\r\n                            <option value={true}>Kích hoạt</option>\r\n                            <option value={false}>Ẩn</option>\r\n                        </select>\r\n                    </div>\r\n                  <button type=\"submit\" className=\"btn btn-primary\">Lưu lại</button>&nbsp;\r\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={this.onClear}>Huỷ bỏ</button>\r\n                </form>\r\n            </div>\r\n\r\n\t\t);\r\n    }\r\n}\r\nexport default TaskForm;","import React, {Component} from 'react';\r\n\r\nclass Control extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            keyword: '',\r\n            sort :{by:'name', value:1}\r\n        };\r\n    }\r\n    onClick = (sortBy, sortValue)=>{\r\n        this.setState({\r\n            sort:{\r\n                by: sortBy,\r\n                value: sortValue\r\n            }\r\n        })\r\n        this.props.onSort(sortBy, sortValue);\r\n    }\r\n    inputKeyword = (event)=>{\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    search = ()=>{\r\n        this.props.onSearch(this.state.keyword)\r\n    }\r\n\trender(){\r\n        var {keyword, sort} = this.state;\r\n            return(\r\n              \t\t<div>\r\n                      <br/>\r\n                      <div className=\"row\">\r\n                            <input type=\"text\" id=\"input\" name=\"keyword\" className=\"searchBox form-control col-md-6\" placeholder=\"Nhập từ khoá...\" value={keyword} onChange={this.inputKeyword}/>\r\n                            <button type=\"button\" className=\"searchButton btn btn-primary col-md-1\" onClick={this.search}>Tìm</button>\r\n                                <div className=\"dropdown col-md-2\">\r\n                                  <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Sắp xếp\r\n                                  </button>\r\n                                  <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                    <a className={( sort.by ==='name'&&sort.value=== 1 )?\"sortSelected\":\"dropdown-item\"} \r\n                                    onClick={()=>this.onClick('name', 1)} >Tên A-Z</a>\r\n                                    <a className={( sort.by ==='name'&&sort.value=== -1 )?\"sortSelected\":\"dropdown-item\"} \r\n                                    onClick={()=>this.onClick('name', -1)}>Tên Z-A</a>\r\n                                    <a className={( sort.by ==='status'&&sort.value=== 1 )?\"sortSelected\":\"dropdown-item\"} \r\n                                    onClick={()=>this.onClick('status', 1)}>Trạng thái kích hoạt</a>\r\n                                    <a className={( sort.by ==='status'&&sort.value=== -1 )?\"sortSelected\":\"dropdown-item\"} \r\n                                    onClick={()=>this.onClick('status', -1)}>Trạng thái ẩn</a>\r\n                                  </div>\r\n                                </div>\r\n                      </div>\r\n                    </div>\r\n        \t\t);\r\n            }\r\n}\r\nexport default Control;","import React , {Component} from 'react'\r\n\r\nclass TableItem extends Component{\r\n\r\n\tchangeStatus = ()=>{\r\n\t\tthis.props.onUpdateStatus(this.props.task.id);\r\n\t}\r\n\r\n\tDelete = ()=>{\r\n\t\tthis.props.onDelete(this.props.task.id);\r\n\t}\r\n\tonUpdate = ()=>{\r\n\t\tthis.props.onUpdate(this.props.task.id);\r\n\t}\r\n\r\n\trender(){\r\n\t\tvar {task, index} = this.props;\r\n\t\treturn(\r\n\t\t\t\t\t\t<tr key={task.id}>\r\n\t                        <td>{index+1}</td>     \r\n\t                        <td>{task.name}</td>  \r\n\t                        <td>\r\n\t                            <label \r\n\t                            \thtmlFor=\"\" \r\n\t                            \tclassName={task.status === true ? 'badge badge-danger' : 'badge badge-success'}\r\n\t                            \tonClick={this.changeStatus}>\r\n\t                            \t{task.status === true ? \"Kích hoạt\" : \"Ẩn\"}\r\n                            \t</label>\r\n\t                        </td>  \r\n\t                        <td>\r\n\t                            <button className=\"btn btn-primary\" onClick={this.onUpdate}>Sửa</button>&nbsp;\r\n\t                            <button className=\"btn btn-primary\" onClick={this.Delete}>Xoá</button> \r\n\t                        </td>             \r\n\t                    </tr>\r\n\r\n\t\t);\r\n\t}\r\n}\r\nexport default TableItem;","import React, {Component} from 'react';\r\nimport TableItem from './tableItem'\r\n\r\nclass TableBox extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\tfilterName : '',\r\n\t\t\tfilterStatus : -1\r\n\t\t};\r\n\t}\r\n\r\n\tonUpdateStatus=(id)=>{\r\n\t\tthis.props.onUpdateStatus(id);\r\n\t}\r\n\tfilter = (event)=>{\r\n\t\tvar target = event.target;\r\n\t\tvar name = target.name;\r\n\t\tvar value = target.value;\r\n\t\tthis.props.onFilter(\r\n\t\t\tname ==='filterName' ? value : this.state.filterName,\r\n\t\t\tname ==='filterStatus' ? value : this.state.filterStatus);\r\n\t\tthis.setState({\r\n\t\t\t[name] : value\r\n\t\t});\r\n\t}\r\n\trender(){\r\n\t\tvar {tasks} = this.props;\r\n\t\tvar {filterName, filterStatus} = this.state;\r\n\t\tvar elmTasks = tasks.map((task,index)=>{\r\n\t\t\t\treturn \t<TableItem key={index} task={task} index={index} onUpdateStatus={this.onUpdateStatus} onDelete={this.props.onDelete} onUpdate={this.props.onUpdate}/>\r\n\t\t});\r\n\t\treturn(\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<table className=\"table table-hover table-bordered\" >\r\n\t                  <thead>\r\n\t                    <tr>\r\n\t                      <th>STT</th>\r\n\t                      <th>Tên</th>\r\n\t                      <th>Trạng thái</th>\r\n\t                      <th>Hành động</th>\r\n\t                    </tr>\r\n\t                  </thead>\r\n\t                  <tbody>\r\n\t                    <tr>\r\n\t                      <td></td>\r\n\t                      <td><input name=\"filterName\" value={filterName} onChange={this.filter} className=\"form-control\" type=\"text\"/></td>\r\n\t                      <td>\r\n\t                          <select name=\"filterStatus\" value={filterStatus} onChange={this.filter} id=\"input\" className=\"form-control\" required=\"required\">\r\n\t                            <option value={-1}>Tất cả</option>\r\n\t                            <option value={1}>Kích hoạt</option>\r\n\t                            <option value={0}>Ẩn</option>\r\n\t                          </select>\r\n\t                      </td>\r\n\t                      <td></td>\r\n\t                    </tr>\r\n\t                    {elmTasks}\r\n\t                  </tbody>\r\n\t                </table>\r\n                </div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default TableBox;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport TaskForm from './components/taskForm';\r\nimport Control from './components/control';\r\nimport TableBox from './components/table';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      tasks : [],\r\n      isDisplayForm: false,\r\n      taskEditing : null, \r\n      filter:{name: '',status: -1},\r\n      keyword : '',\r\n      sort : {by: 'name',value: 1}\r\n    }\r\n  }\r\n    componentDidMount(){\r\n        if(localStorage && localStorage.getItem('tasks')){\r\n          var tasks = JSON.parse(localStorage.getItem('tasks'));\r\n            this.setState({'tasks':tasks});\r\n        }\r\n    }\r\n  openForm(){\r\n    if(!this.state.isDisplayForm)\r\n        this.setState({\r\n            isDisplayForm : true \r\n        });\r\n  }\r\n\r\n  onCloseForm = () =>{\r\n    this.setState({\r\n      isDisplayForm : !this.state.isDisplayForm\r\n    });\r\n  }\r\n  onCreateForm = ()=>{\r\n    this.setState({\r\n      'isDisplayForm': true,\r\n      taskEditing : null\r\n    });\r\n  }\r\n  onSubmit = (data)=>{\r\n    var {tasks} =this.state;\r\n    var id = data.id\r\n    if(id===\"\"){\r\n        data.id = this.generateID();\r\n        tasks.push(data);\r\n    }else{\r\n        var index = this.findIndex(id);\r\n        tasks[index] = data;\r\n    }   \r\n    this.setState({\r\n        tasks: tasks,\r\n        taskEditing: null\r\n    });\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }\r\n  onUpdateStatus =(id)=>{\r\n    var {tasks} = this.state;\r\n    var index = this.findIndex(id);\r\n    if(index !== -1){\r\n      tasks[index].status = !tasks[index].status;\r\n    }\r\n    this.setState({tasks:tasks});\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  }\r\n  onDelete = (id)=>{\r\n    var {tasks} = this.state;\r\n    var index = this.findIndex(id);\r\n    if(index !== -1){\r\n      tasks.splice(index,1);\r\n    }\r\n    this.setState({tasks:tasks});\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  }\r\n  onUpdate = (id)=>{\r\n    var {tasks} = this.state;\r\n    var index = this.findIndex(id);\r\n    var taskEditing = tasks[index];\r\n    if(index !== -1){\r\n      this.setState({taskEditing:taskEditing });\r\n    }\r\n    this.openForm();\r\n  }\r\n  onFilter =(filterName, filterStatus)=>{\r\n    filterStatus = parseInt(filterStatus,10);\r\n    this.setState({\r\n        filter:{\r\n            name: filterName.toLowerCase(),\r\n            status: filterStatus\r\n        }\r\n    })\r\n  }\r\n  onSearch = (keyword)=>{\r\n    this.setState({\r\n        keyword : keyword.toLowerCase()\r\n    })\r\n  }\r\n  onSort =(sortBy, sortValue)=>{\r\n    console.log(sortBy, sortValue);\r\n    this.setState({\r\n        sort: {\r\n            by:sortBy,\r\n            value: sortValue\r\n        }\r\n    });\r\n  }\r\n\r\n  findIndex = (id)=>{\r\n    var{tasks} = this.state;\r\n    var result = -1\r\n    tasks.forEach((task,index)=>{\r\n      if(task.id === id){\r\n        result = index;\r\n      }\r\n    })\r\n    return result;\r\n  }\r\n\r\n  randomElement(){\r\n    return Math.floor((1+Math.random())*0x10000).toString(16).substring(1);\r\n  }\r\n\r\n  generateID(){\r\n    return this.randomElement() + this.randomElement()+'-' +this.randomElement()\r\n  }\r\n\r\n\r\n  render(){\r\n    var {tasks, isDisplayForm, taskEditing, filter, keyword, sort} = this.state;\r\n    if(filter.name){\r\n        tasks = tasks.filter((task)=>{\r\n            return task.name.toLowerCase().indexOf(filter.name) !== -1\r\n        })\r\n    }\r\n    tasks = tasks.filter((task)=>{\r\n        if (filter.status === -1){\r\n            return task\r\n        }else{\r\n            return task.status === (filter.status === 1 ? true: false)\r\n        }\r\n    })\r\n    if(sort.by = 'name'){\r\n        tasks.sort((a,b)=>{\r\n            if(a.name > b.name) return sort.value;\r\n            else if(a.name<b.name) return -sort.value;\r\n            else return 0;\r\n        });\r\n    }else{\r\n            tasks.sort((a,b)=>{\r\n            if(a.status > b.status) return -sort.value;\r\n            else if(a.status<b.status) return sort.value;\r\n            else return 0;\r\n        });\r\n    }\r\n    var elmTaskFrom = isDisplayForm === true ? \r\n            <TaskForm \r\n                onSubmit={this.onSubmit} \r\n                onCloseForm={this.onCloseForm} \r\n                taskEditing={taskEditing}/> : \"\";\r\n    if(keyword){\r\n        tasks = tasks.filter((task)=>{\r\n            return task.name.toLowerCase().indexOf(keyword) !== -1\r\n        })\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n          <div className=\"pageheader text-center\" >\r\n            <h1>Quản lý công việc</h1>\r\n          </div>\r\n          <div className=\"row\">\r\n              <div className=\"leftBox col-md-4\">\r\n                   {elmTaskFrom}\r\n              </div>\r\n              <div className={isDisplayForm === true ? 'rightBox col-md-8': 'rightBox col-md-12'}>\r\n              <div className=\"controlBox\">\r\n                <div>\r\n                    <button type=\"button\" className=\"btn btn-primary col-md-3\" onClick={this.onCreateForm}>Thêm công việc</button>&nbsp;\r\n                </div>\r\n                    <Control onSearch={this.onSearch} onSort={this.onSort}/>\r\n              </div> \r\n              <br/> \r\n              <div className=\"tableBox col-md-12\">\r\n                  <TableBox tasks={tasks} onUpdateStatus={this.onUpdateStatus} onDelete={this.onDelete} onUpdate={this.onUpdate} onFilter={this.onFilter}/>\r\n              </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}